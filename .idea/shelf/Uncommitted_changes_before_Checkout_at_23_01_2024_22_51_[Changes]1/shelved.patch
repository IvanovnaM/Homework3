Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>untitled</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <properties>\r\n        <maven.compiler.source>11</maven.compiler.source>\r\n        <maven.compiler.target>11</maven.compiler.target>\r\n    </properties>\r\n\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -5,12 +5,8 @@
     <modelVersion>4.0.0</modelVersion>
 
     <groupId>org.example</groupId>
-    <artifactId>untitled</artifactId>
+    <artifactId>Homework3</artifactId>
     <version>1.0-SNAPSHOT</version>
-    <properties>
-        <maven.compiler.source>11</maven.compiler.source>
-        <maven.compiler.target>11</maven.compiler.target>
-    </properties>
 
 
 </project>
\ No newline at end of file
Index: .idea/compiler.xml
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
deleted file mode 100644
--- a/.idea/compiler.xml	
+++ /dev/null	
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CompilerConfiguration">
-    <annotationProcessing>
-      <profile name="Maven default annotation processors profile" enabled="true">
-        <sourceOutputDir name="target/generated-sources/annotations" />
-        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
-        <outputRelativeToContentRoot value="true" />
-        <module name="untitled" />
-      </profile>
-    </annotationProcessing>
-    <bytecodeTargetLevel>
-      <module name="untitled" target="11" />
-    </bytecodeTargetLevel>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
deleted file mode 100644
--- a/.idea/jarRepositories.xml	
+++ /dev/null	
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Central Repository" />
-      <option name="url" value="https://repo.maven.apache.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	
+++ /dev/null	
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/untitled.iml" filepath="$PROJECT_DIR$/untitled.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: src/main/java/school/lesson2/Lesson_4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/school/lesson2/Lesson_4.java b/src/main/java/school/lesson2/Lesson_4.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/school/lesson2/Lesson_4.java	
@@ -0,0 +1,38 @@
+package school.lesson2;
+/*Создать массив из 5 сотрудников.
+Пример:
+// вначале объявляем массив объектов
+Person[] persArray = new Person[5];
+// потом для каждой ячейки массива задаем объект
+persArray[0] = new Person("Ivanov Ivan", "Engineer",
+               "ivivan@mailbox.com", "892312312", 30000, 30);
+persArray[1] = new Person(...);
+...
+persArray[4] = new Person(...);*/
+public class Lesson_4 {
+    public static void main(String[] args) {
+        Employee[] persArray = new Employee[5];
+        persArray[0] = new Employee("Jill Wilson", "dev", "jw@gmail.com", "+375293665544", 2500, 23);
+        persArray[1] = new Employee("Calvin Clayton", "QA", "cc@gmail.com", "+375299884455", 1270, 27);
+        persArray[2] = new Employee("Angela Green", "Analiz", "ag@gmail.com", "+375297771234", 1900, 21);
+        persArray[3] = new Employee("Clarence Yates", "Legal Advisor", "cy@gmail.com", "+375295554789", 1200, 28);
+        persArray[4] = new Employee("Beverly Jefferson", "Director of Client Relations", "bj@gmail.com", "+375294445896", 1380, 38);
+        System.out.println("name: " + persArray[0].name + " position: " +
+                persArray[0].position + " email: " + persArray[0].email + " number: " +
+                persArray[0].number + " salary: " + persArray[0].salary + " age: " + persArray[0].age);
+        System.out.println("name: " + persArray[1].name + " position: " +
+                persArray[1].position + " email: " + persArray[1].email + " number: " +
+                persArray[1].number + " salary: " + persArray[1].salary + " age: " + persArray[1].age);
+        System.out.println("name: " + persArray[2].name + " position: " +
+                persArray[2].position + " email: " + persArray[2].email + " number: " +
+                persArray[2].number + " salary: " + persArray[2].salary + " age: " + persArray[2].age);
+        System.out.println("name: " + persArray[3].name + " position: " +
+                persArray[3].position + " email: " + persArray[3].email + " number: " +
+                persArray[3].number + " salary: " + persArray[3].salary + " age: " + persArray[3].age);
+        System.out.println("name: " + persArray[4].name + " position: " +
+                persArray[4].position + " email: " + persArray[4].email + " number: " +
+                persArray[4].number + " salary: " + persArray[4].salary + " age: " + persArray[4].age);
+
+    }
+}
+
Index: src/main/java/school/lesson2/Park.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/school/lesson2/Park.java b/src/main/java/school/lesson2/Park.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/school/lesson2/Park.java	
@@ -0,0 +1,15 @@
+package school.lesson2;
+/*Создать класс Park с внутренним классом, с помощью объектов которого можно хранить информацию
+     об аттракционах, времени их работы и стоимости.
+     */
+public class Park {
+    String attraction;
+    String workingHours;
+    int price;
+    public class Info{
+        String attraction;
+        String workingHours;
+        int price;
+    }
+
+}
Index: untitled.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/untitled.iml b/untitled.iml
new file mode 100644
--- /dev/null	
+++ b/untitled.iml	
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/main/java/school/lesson2/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/school/lesson2/Employee.java b/src/main/java/school/lesson2/Employee.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/school/lesson2/Employee.java	
@@ -0,0 +1,38 @@
+package school.lesson2;
+
+public class Employee {
+    /*1.Создать класс "Сотрудник" с полями: ФИО, должность, email, телефон, зарплата, возраст.
+Конструктор класса должен заполнять эти поля при создании объекта.
+Внутри класса «Сотрудник» написать метод, который выводит информацию об объекте в консоль. */
+
+        // это поля класса
+        String name; //ФИО
+        String position; //должность
+        String email; //емейл
+        String number; //номер телефона
+        int salary; //зарплата
+        int age; //возраст
+
+        public Employee(String name, String position, String email, String number,
+        int salary, int age){
+            this.name = name;
+            this.position = position;
+            this.email = email;
+            this.number = number;
+            this.salary = salary;
+            this.age = age;
+
+        }
+        public void println () {
+
+        }
+    }
+
+
+
+
+
+
+
+
+
